
    <h1>Query opratore</h1>
    $eq, $gt, $gte, $lt, $lte, 
    db.test.find({age: {$lt: 30}}).sort({age: 1})


    $exists
    db.test.find({age: {$exists: true}})

    $type 
    db.test.find({age: {$type: null}})

    $size (only for array)
    db.test.find({friends: {$size: 0/1/2/3/4}})

    $all 
    db.test.find({friends : {$all : ["Najmus Sakib","Abdur Rakib","Mir Hussain"]}})

    $elemMatch
    db.test.find({skills:{$elemMatch:{name: "JAVASCRIPT",level: "Expert"}}}).project({skills:1})

# update: 
    $set 
    
    db.test.updateOne(
    {_id: ObjectId("6406ad63fc13ae5a40000065")},
    {$set: { age: 45 }}
    )


# MongoDB aggregation 
db.test.aggregate([
    {$match: {age: {$lt: 30},gender:"Female"}},
    {$match: {gender:"Female"}},
    {$addFields: {course:"myself"}},
    {$project: {name:1,age:1,gender:1,course:1}},
    {$limit: 5},
    {$sort: {age: 1}},
    {$merge: "test"},
    {$count: "total"}
    ])


  db.test.aggregate([
    {
        $group:
        {
            _id: "null",
            count: { $sum: 1 },
            totalSalary: { $sum: "$salary" },
            maxSalary: {$max: "$salary"},
            minSalary: {$min: "$salary"},
            avgSalary: {$avg: "$salary"}
        }

    },
    {
        $project: {
            totalSalary: 1,
            maxSalary:1,
            minSalary:1,
            avarageSalary:"$avgSalary",
            subtrationSalary: {$subtract:["$maxSalary","$minSalary"]}
        }
    }
  ])